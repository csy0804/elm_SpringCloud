<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.neusoft</groupId>
    <artifactId>spring_cloud_demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <!-- 统一JAR包和版本号的管理 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>
    <!--
    dependmanagement是用在父工程中声明依赖，不引用。子模块继承之后再引包。
    作用是，锁定版本，子模块不用写grouid and version
    -->
    <dependencyManagement>
        <dependencies>
            <!--加入eureka clinet的依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            </dependency>

            <!--boot 3.1.3 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>3.1.3</version>
                <type>pom</type>
                <!-- Maven也是单继承。这里继承了spring-boot中的dependencyManagement
                但是下面还要继承spring-cloud中的dependencyManagement。
                使用scope=import就可以实现多继承了
                -->
                <scope>import</scope>
            </dependency>
            <!--cloud hoxton.sr9 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2022.0.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
            </dependency>


        </dependencies>
    </dependencyManagement>
    <modules>
        <module>
            user_server_10100
        </module>
        <module>gpt_server_10900</module>
        <module>business_server_10300</module>
        <module>business_server_10301</module>
        <module>food_server_10200</module>
        <module>food_server_10201</module>
        <module>cart_server_10400</module>
        <module>cart_server_10401</module>
        <module>deliveryaddress_server_10500</module>
        <module>orders_server_10601</module>
        <module>orders_server_10600</module>
        <module>eureka_server_13000</module>
        <module>eureka_server_13001</module>
        <module>gateway_server_14000</module>
        <module>config_server_15000</module>
        <module>config_server_15001</module>
        <module>credit_server_10700</module>
    </modules>
    <!-- 创建完子工程后，此处自动添加子工程模块 -->
    <!--
    <modules>
    <module>...</module>
   注意：根据Spring官方提供的SpringCloud与SpringBoot版本兼容说明中，SpringCloud的Hoxton版本必须
   使用SpringBoot的2.2.x或2.3.x版本。
   2.2.创建用户微服务
   在父工程下，创建 Maven Module 子工程（工程名：user_server_10100；Packaging：jar）
   2.2.1.修改pom.xml文件
    </modules>
    -->

</project>